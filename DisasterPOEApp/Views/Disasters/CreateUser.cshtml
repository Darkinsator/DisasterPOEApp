@model DisasterPOEApp.Models.Disaster

@{
    ViewBag.Title = "Create Disaster";
}

<h2>Create a New Disaster</h2>
<p>Please fill out the form below to create a new disaster entry in our system. Your contribution helps us manage and respond to disasters more effectively.</p>

@using (Html.BeginForm("CreateUser", "Disasters", FormMethod.Post, new { id = "disasterForm" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Disaster Details</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label col-md-2 text-dark" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.StartDate, new { @class = "form-control", type = "date" })
                @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EndDate, htmlAttributes: new { @class = "control-label col-md-2 text-dark" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.EndDate, new { @class = "form-control", type = "date" })
                @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Location, htmlAttributes: new { @class = "control-label col-md-2 text-dark" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Location, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AidType, htmlAttributes: new { @class = "control-label col-md-2 text-dark" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.AidType, new SelectList(new[] { "Water", "Clothing", "Food" }), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.AidType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-secondary" })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(document).ready(function () {
            // Check if TempData has a success message
            var successMessage = '@TempData["SuccessMessage"]';
            if (successMessage) {
                alert(successMessage);
                window.location.href = '@Url.Action("Menu", "Home")';
            }
        });
    </script>
}
